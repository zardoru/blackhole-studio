{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/blackhole-classes/builtin-sv-functions.ts","webpack:///./src/app/blackhole-classes/cycle-time-emitter.ts","webpack:///./src/app/blackhole-classes/divisor-emitter.ts","webpack:///./src/app/blackhole-classes/osu-timestamp.ts","webpack:///./src/app/blackhole-classes/osu-timing-point-emitter.ts","webpack:///./src/app/blackhole-classes/osu-timing-point.ts","webpack:///./src/app/blackhole-classes/sv-functions.ts","webpack:///./src/app/compose-emitters/compose-emitters.component.css","webpack:///./src/app/compose-emitters/compose-emitters.component.html","webpack:///./src/app/compose-emitters/compose-emitters.component.ts","webpack:///./src/app/compose-emitters/emitter-parameter-trio/emitter-parameter-trio.component.css","webpack:///./src/app/compose-emitters/emitter-parameter-trio/emitter-parameter-trio.component.html","webpack:///./src/app/compose-emitters/emitter-parameter-trio/emitter-parameter-trio.component.ts","webpack:///./src/app/compose-timing-points/compose-timing-points.component.css","webpack:///./src/app/compose-timing-points/compose-timing-points.component.html","webpack:///./src/app/compose-timing-points/compose-timing-points.component.ts","webpack:///./src/app/emission-control/emission-control.component.css","webpack:///./src/app/emission-control/emission-control.component.html","webpack:///./src/app/emission-control/emission-control.component.ts","webpack:///./src/app/emitter-input/divisorinput/divisorinput.component.css","webpack:///./src/app/emitter-input/divisorinput/divisorinput.component.html","webpack:///./src/app/emitter-input/divisorinput/divisorinput.component.ts","webpack:///./src/app/emitter-input/select-emitter-function/emission-function-parameters-assignment/emission-function-parameters-assignment.component.css","webpack:///./src/app/emitter-input/select-emitter-function/emission-function-parameters-assignment/emission-function-parameters-assignment.component.html","webpack:///./src/app/emitter-input/select-emitter-function/emission-function-parameters-assignment/emission-function-parameters-assignment.component.ts","webpack:///./src/app/emitter-input/select-emitter-function/select-emission-function-dialog/select-emission-function-dialog.component.css","webpack:///./src/app/emitter-input/select-emitter-function/select-emission-function-dialog/select-emission-function-dialog.component.html","webpack:///./src/app/emitter-input/select-emitter-function/select-emission-function-dialog/select-emission-function-dialog.component.ts","webpack:///./src/app/emitter-input/select-emitter-function/select-emitter-function.component.css","webpack:///./src/app/emitter-input/select-emitter-function/select-emitter-function.component.html","webpack:///./src/app/emitter-input/select-emitter-function/select-emitter-function.component.ts","webpack:///./src/app/emitter-input/timeinput/timeinput-beatfraction/timeinput-beatfraction.component.css","webpack:///./src/app/emitter-input/timeinput/timeinput-beatfraction/timeinput-beatfraction.component.html","webpack:///./src/app/emitter-input/timeinput/timeinput-beatfraction/timeinput-beatfraction.component.ts","webpack:///./src/app/emitter-input/timeinput/timeinput-beats/timeinput-beats.component.css","webpack:///./src/app/emitter-input/timeinput/timeinput-beats/timeinput-beats.component.html","webpack:///./src/app/emitter-input/timeinput/timeinput-beats/timeinput-beats.component.ts","webpack:///./src/app/emitter-input/timeinput/timeinput-duration/timeinput-duration.component.css","webpack:///./src/app/emitter-input/timeinput/timeinput-duration/timeinput-duration.component.html","webpack:///./src/app/emitter-input/timeinput/timeinput-duration/timeinput-duration.component.ts","webpack:///./src/app/emitter-input/timeinput/timeinput-notetimes/timeinput-notetimes.component.css","webpack:///./src/app/emitter-input/timeinput/timeinput-notetimes/timeinput-notetimes.component.html","webpack:///./src/app/emitter-input/timeinput/timeinput-notetimes/timeinput-notetimes.component.ts","webpack:///./src/app/emitter-input/timeinput/timeinput-startend/timeinput-startend.component.css","webpack:///./src/app/emitter-input/timeinput/timeinput-startend/timeinput-startend.component.html","webpack:///./src/app/emitter-input/timeinput/timeinput-startend/timeinput-startend.component.ts","webpack:///./src/app/emitter-input/timeinput/timeinput.component.css","webpack:///./src/app/emitter-input/timeinput/timeinput.component.html","webpack:///./src/app/emitter-input/timeinput/timeinput.component.ts","webpack:///./src/app/emitter-input/timeinput/timing-point-template/timing-point-template.component.css","webpack:///./src/app/emitter-input/timeinput/timing-point-template/timing-point-template.component.html","webpack:///./src/app/emitter-input/timeinput/timing-point-template/timing-point-template.component.ts","webpack:///./src/app/function-editor/delete-function-dialog/delete-function-dialog.component.css","webpack:///./src/app/function-editor/delete-function-dialog/delete-function-dialog.component.html","webpack:///./src/app/function-editor/delete-function-dialog/delete-function-dialog.component.ts","webpack:///./src/app/function-editor/function-editor.component.css","webpack:///./src/app/function-editor/function-editor.component.html","webpack:///./src/app/function-editor/function-editor.component.ts","webpack:///./src/app/function-editor/select-function-dialog/select-function-dialog.component.css","webpack:///./src/app/function-editor/select-function-dialog/select-function-dialog.component.html","webpack:///./src/app/function-editor/select-function-dialog/select-function-dialog.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<mat-toolbar>\\r\\n  <h2>Blackhole SV Studio (by Agka)</h2>\\r\\n</mat-toolbar>\\r\\n<mat-tab-group>\\r\\n  <mat-tab label=\\\"Single Emission\\\">\\r\\n    <app-emission-control></app-emission-control>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Compose Emitters\\\">\\r\\n    <app-compose-emitters></app-compose-emitters>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Compose Timing Points\\\">\\r\\n    <app-compose-timing-points></app-compose-timing-points>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Custom Function Editor\\\">\\r\\n    <app-function-editor [collection]=\\\"svFunctions\\\"></app-function-editor>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { CycleEmissionType } from \"./blackhole-classes/cycle-time-emitter\";\r\nimport { SvFunctionCollection } from './blackhole-classes/sv-functions';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'blackhole';\r\n  timeInputType = CycleEmissionType\r\n  svFunctions: SvFunctionCollection;\r\n\r\n  constructor() {\r\n    this.svFunctions = new SvFunctionCollection();\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { TimeinputComponent } from './emitter-input/timeinput/timeinput.component';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatCardModule,\r\n  MatMenuModule,\r\n  MatButtonModule,\r\n  MatTabsModule,\r\n  MatTableModule,\r\n  MatDialogModule,\r\n  MatCheckboxModule,\r\n  MatToolbarModule,\r\n  MatExpansionModule\r\n} from '@angular/material';\r\nimport { TimeinputDurationComponent } from './emitter-input/timeinput/timeinput-duration/timeinput-duration.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TimeinputBeatsComponent } from './emitter-input/timeinput/timeinput-beats/timeinput-beats.component';\r\nimport { TimeinputNotetimesComponent } from './emitter-input/timeinput/timeinput-notetimes/timeinput-notetimes.component';\r\nimport { TimeinputStartendComponent } from './emitter-input/timeinput/timeinput-startend/timeinput-startend.component';\r\nimport { DivisorinputComponent } from './emitter-input/divisorinput/divisorinput.component';\r\nimport { EmissionControlComponent } from './emission-control/emission-control.component';\r\nimport { FunctionEditorComponent } from './function-editor/function-editor.component';\r\n\r\nimport { AceEditorModule } from 'ng2-ace-editor';\r\nimport { SelectFunctionDialogComponent } from './function-editor/select-function-dialog/select-function-dialog.component';\r\nimport { DeleteFunctionDialogComponent } from './function-editor/delete-function-dialog/delete-function-dialog.component';\r\nimport { TimingPointTemplateComponent } from './emitter-input/timeinput/timing-point-template/timing-point-template.component';\r\nimport { SelectEmissionFunctionDialogComponent } from './emitter-input/select-emitter-function/select-emission-function-dialog/select-emission-function-dialog.component';\r\nimport {\r\n  EmissionFunctionParametersAssignmentComponent\r\n} from './emitter-input/select-emitter-function/emission-function-parameters-assignment/emission-function-parameters-assignment.component';\r\nimport { TimeinputBeatfractionComponent } from './emitter-input/timeinput/timeinput-beatfraction/timeinput-beatfraction.component';\r\nimport { ComposeEmittersComponent } from './compose-emitters/compose-emitters.component';\r\nimport { ComposeTimingPointsComponent } from './compose-timing-points/compose-timing-points.component';\r\nimport { SelectEmitterFunctionComponent } from './emitter-input/select-emitter-function/select-emitter-function.component';\r\nimport { EmitterParameterTrioComponent } from './compose-emitters/emitter-parameter-trio/emitter-parameter-trio.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TimeinputComponent,\r\n    TimeinputDurationComponent,\r\n    TimeinputBeatsComponent,\r\n    TimeinputNotetimesComponent,\r\n    TimeinputStartendComponent,\r\n    DivisorinputComponent,\r\n    EmissionControlComponent,\r\n    FunctionEditorComponent,\r\n    SelectFunctionDialogComponent,\r\n    DeleteFunctionDialogComponent,\r\n    TimingPointTemplateComponent,\r\n    SelectEmissionFunctionDialogComponent,\r\n    EmissionFunctionParametersAssignmentComponent,\r\n    TimeinputBeatfractionComponent,\r\n    ComposeEmittersComponent,\r\n    ComposeTimingPointsComponent,\r\n    SelectEmitterFunctionComponent,\r\n    EmitterParameterTrioComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    BrowserAnimationsModule,\r\n    MatExpansionModule,\r\n    AceEditorModule\r\n  ],\r\n  providers: [],\r\n  entryComponents: [\r\n    SelectFunctionDialogComponent,\r\n    DeleteFunctionDialogComponent,\r\n    SelectEmissionFunctionDialogComponent,\r\n    EmissionFunctionParametersAssignmentComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export let builtinSv = {\r\n    'Monotonic Scrolling':\r\n    {\r\n        'parameters':\r\n            [\r\n                {\r\n                    'name': 'exponent',\r\n                    'description': 'Exponent to use. 1 is linear easing.',\r\n                    'defaultValue': '2.718281828459045'\r\n                },\r\n                {\r\n                    'name': 'startSv',\r\n                    'description': 'SV to map the starting point to',\r\n                    'defaultValue': '1'\r\n                },\r\n                {\r\n                    'name': 'endSv',\r\n                    'description': 'SV to map the end point to',\r\n                    'defaultValue': '2'\r\n                }],\r\n        'body': '(() => { \\n    return (x, params) => { \\n        x = Math.pow(x, params.exponent);\\n        return (1 - x) * params.startSv + x * params.endSv; \\n    }; \\n})();',\r\n        'name': 'Monotonic Scrolling',\r\n        'tooltip': '',\r\n        'description': 'Function that helps the user scroll from A to B with exponential easing.'\r\n    },\r\n    'Sine Scrolling': {\r\n        'parameters': [{\r\n            'name': 'center',\r\n            'description': 'Center point. Wave will oscilate around here.',\r\n            'defaultValue': '1'\r\n        },\r\n        {\r\n            'name': 'amplitude',\r\n            'description': 'Amplitude. How much to move away from the center.',\r\n            'defaultValue': '0.2'\r\n        }],\r\n        'body': '(() => {\\n    return (x, params) => {\\n        var angle = 2 * Math.PI * x;\\n        var sineval = params.amplitude * Math.sin(angle) + params.center;\\n        return sineval;\\n    }; \\n})()',\r\n        'name': 'Sine Scrolling',\r\n        'tooltip': '',\r\n        'description': 'Smooth sine scrolling. Waves around center point.'\r\n    },\r\n    'Teleporters': {\r\n        'parameters': [{\r\n            'name': 'peak',\r\n            'description': 'Peak SV multiplier.',\r\n            'defaultValue': '10'\r\n        },\r\n        {\r\n            'name': 'rate',\r\n            'description': 'SV Rate after the peak.',\r\n            'defaultValue': '1'\r\n        },\r\n        {\r\n            'name': 'duration',\r\n            'description': 'Fraction of the section to last.',\r\n            'defaultValue': '0.1'\r\n        }],\r\n        'body': '(() => { \\n    return (x, params) => {\\n        if (x < params.duration) return params.peak;\\n        else return params.rate;\\n    }; \\n})()',\r\n        'name': 'Teleporters',\r\n        'tooltip': '',\r\n        'description': 'Jump that map around with this function. Hits peak for the duration, then a second rate afterwards. Make sure your divisors are at least 1/duration.'\r\n    },\r\n    'Rate Jitter': {\r\n        'parameters': [{\r\n            'name': 'duration',\r\n            'description': 'Fraction: How long the jitter lasts on this section',\r\n            'defaultValue': '0.5'\r\n        }, {\r\n            'name': 'startSv',\r\n            'description': 'Initial SV value',\r\n            'defaultValue': '1.5'\r\n        }, {\r\n            'name': 'dstRate',\r\n            'description': 'Rate the jitter should look like',\r\n            'defaultValue': '1'\r\n        }],\r\n        'body': '(() => {\\n    return (x, params) => {\\n        var div = 1 / (1 - params.duration);\\n        var centerSv = (params.dstRate - params.startSv * params.duration) * div;\\n        \\n        if (x < params.duration) return params.startSv;\\n        if (x >= params.duration && x < 1) return centerSv;\\n        if (x == 1) return params.dstRate;\\n        return 1;\\n    }; \\n})()',\r\n        'name': 'Rate Jitter',\r\n        'tooltip': '',\r\n        'description': 'Jitter between two SV values that look like the target rate, given the first SV value.'\r\n    },\r\n    'Bounce': {\r\n        'parameters': [{\r\n            'name': 'amplitude',\r\n            'description': 'The bounce\\'s peak from the center',\r\n            'defaultValue': '0.2'\r\n        }, {\r\n            'name': 'center',\r\n            'description': 'The bounce\\'s start point',\r\n            'defaultValue': '1'\r\n        }],\r\n        'body': '(() => { \\n    return (x, params) => {\\n        var angle = Math.PI * x;\\n        var sineval = params.amplitude * Math.sin(angle) + params.center;\\n        return sineval;\\n    }; \\n})()',\r\n        'name': 'Bounce',\r\n        'tooltip': '',\r\n        'description': 'Bouncy function that goes up and down.'\r\n    }\r\n};\r\n","import {DivisorEmitter, CycleDivision, Cycle} from './divisor-emitter';\r\nimport {ArgumentOutOfRangeError} from 'rxjs';\r\n\r\nexport interface CycleOutput {\r\n  cycle: Cycle;\r\n  count: number;\r\n}\r\n\r\nexport abstract class CycleTimeEmitter {\r\n  startTime: number;\r\n  cycleCount: number;\r\n\r\n  abstract getDuration(cycleIndex: number): number;\r\n\r\n  abstract get autocycle(); // whether this time input mode calculates cycles automatically\r\n  abstract get isConstantCycleTime();\r\n\r\n  get cycleDuration() {\r\n    return this.getDuration(0);\r\n  }\r\n\r\n  protected constructor() {\r\n    this.startTime = 0;\r\n    this.cycleCount = 1;\r\n  }\r\n\r\n  cycleStartTime(index: number): number {\r\n    return index * this.cycleDuration + this.startTime;\r\n  }\r\n\r\n  createCycle(\r\n    index: number,\r\n    divisor: DivisorEmitter,\r\n    timeDeformFunction,\r\n    funcVars: any,\r\n    generateLastPoint: boolean): CycleOutput {\r\n    const effectiveStartTime = this.cycleStartTime(index);\r\n\r\n    const dur = this.getDuration(index);\r\n    funcVars.spanPerCycle = dur;\r\n    return {\r\n      cycle: divisor.generateSpanDivisors(\r\n        effectiveStartTime,\r\n        dur,\r\n        timeDeformFunction,\r\n        funcVars,\r\n        generateLastPoint\r\n      ),\r\n      count: divisor.getSpanDivisorCount(dur)\r\n    };\r\n  }\r\n}\r\n\r\nexport class CycleTimeMsDuration extends CycleTimeEmitter {\r\n  duration: number;\r\n\r\n  get autocycle() {\r\n    return false;\r\n  }\r\n\r\n  get isConstantCycleTime() {\r\n    return true;\r\n  }\r\n\r\n  getDuration(cycleIndex: number): number {\r\n    return this.duration;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.duration = 0;\r\n  }\r\n}\r\n\r\nexport class CycleTimeDeltatime extends CycleTimeEmitter {\r\n  endTime: number;\r\n\r\n  get autocycle() {\r\n    return false;\r\n  }\r\n\r\n  get isConstantCycleTime() {\r\n    return true;\r\n  }\r\n\r\n  getDuration(cycleIndex: number): number {\r\n    return this.endTime - this.startTime;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.endTime = 0;\r\n  }\r\n}\r\n\r\nexport class CycleTimeBeats extends CycleTimeEmitter {\r\n  beats: number;\r\n  bpm: number;\r\n\r\n  get autocycle() {\r\n    return false;\r\n  }\r\n\r\n  get isConstantCycleTime() {\r\n    return true;\r\n  }\r\n\r\n  getDuration(cycleIndex: number): number {\r\n    return 1000 * 60 / this.bpm * this.beats;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    this.beats = 1;\r\n    this.bpm = 120;\r\n  }\r\n}\r\n\r\nexport class CycleTimeBeatFraction extends CycleTimeEmitter {\r\n  totalBeats = 1;\r\n  beatDivisor = 2;\r\n  bpm = 120;\r\n\r\n  set cycleCount(_: number) { /* do not allow */\r\n  }\r\n\r\n\r\n  get cycleCount() {\r\n    return this.totalBeats * this.beatDivisor;\r\n  }\r\n\r\n  get autocycle() {\r\n    return true;\r\n  }\r\n\r\n  get isConstantCycleTime() {\r\n    return true;\r\n  }\r\n\r\n  getDuration(cycleIndex: number): number {\r\n    const mspb = 60000 / this.bpm;\r\n    return mspb / this.beatDivisor;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n\r\nexport abstract class CycleTimeNotetime extends CycleTimeEmitter {\r\n  get autocycle() {\r\n    return true;\r\n  }\r\n\r\n  noteTimes: number[];\r\n\r\n  _notes: string;\r\n  set notes(value: string) {\r\n    this._notes = value;\r\n\r\n    const valset = new Set();\r\n\r\n    // parse from this syntax\r\n    // time - (time|discarded,...)\r\n\r\n    const re = /(\\d+)\\|\\d+/g;\r\n    let match;\r\n    while ((match = re.exec(value)) != null) {\r\n      valset.add(parseInt(match[1], 10));\r\n    }\r\n\r\n    this.noteTimes = Array.from(valset).sort((a, b) => {\r\n      return a - b;\r\n    });\r\n\r\n    this.cycleCount = this.noteTimes.length - 1;\r\n  }\r\n\r\n  get notes(): string {\r\n    return this._notes;\r\n  }\r\n\r\n  cycleStartTime(cycle: number): number {\r\n    return this.noteTimes[cycle] - this.noteTimes[0] + this.startTime;\r\n  }\r\n\r\n  protected constructor() {\r\n    super();\r\n    this.noteTimes = [];\r\n  }\r\n}\r\n\r\nexport class CycleTimeNotetimeFixedDuration extends CycleTimeNotetime {\r\n  duration: number;\r\n\r\n  get isConstantCycleTime() {\r\n    return true;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getDuration(cycleIndex: number): number {\r\n    if (this.noteTimes.length === 0) {\r\n      return this.duration;\r\n    }\r\n    if (cycleIndex < 0) {\r\n      throw new ArgumentOutOfRangeError();\r\n    }\r\n    if (cycleIndex >= this.noteTimes.length) {\r\n      throw new ArgumentOutOfRangeError();\r\n    }\r\n\r\n    let spanToNext: number;\r\n    if (cycleIndex === this.noteTimes.length - 1) {\r\n      spanToNext = Infinity;\r\n    } else {\r\n      spanToNext = this.noteTimes[cycleIndex + 1] - this.noteTimes[cycleIndex];\r\n    }\r\n\r\n\r\n    return Math.min(this.duration, spanToNext);\r\n  }\r\n}\r\n\r\nexport class CycleTimeNoteToNote extends CycleTimeNotetime {\r\n  get isConstantCycleTime() {\r\n    return false;\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getDuration(cycleIndex: number): number {\r\n    if (!this.noteTimes) {\r\n      return 0;\r\n    }\r\n    if (this.noteTimes.length < 2) {\r\n      return 0;\r\n    }\r\n    if (cycleIndex < 0) {\r\n      throw new ArgumentOutOfRangeError();\r\n    }\r\n    if (cycleIndex >= this.noteTimes.length) {\r\n      throw new ArgumentOutOfRangeError();\r\n    }\r\n\r\n    if (cycleIndex === this.noteTimes.length - 1) {\r\n      return 0;\r\n    }\r\n\r\n    return this.noteTimes[cycleIndex + 1] - this.noteTimes[cycleIndex];\r\n  }\r\n}\r\n\r\nexport enum CycleEmissionType {\r\n  Span,\r\n  Delta,\r\n  Beats,\r\n  BeatDivision,\r\n  NotetimeSpan,\r\n  NoteToNote\r\n}\r\n","export interface CycleDivision {time: number; fraction: number;}\r\nexport type Cycle = IterableIterator<CycleDivision>;\r\n\r\nexport abstract class DivisorEmitter {\r\n    abstract getSpanDivisorCount(span: number);\r\n\r\n    *generateSpanDivisors(\r\n        startTime: number,\r\n        duration: number,\r\n        timeWarpFunction,\r\n        vars: any,\r\n        includeEndPoint: boolean): Cycle {\r\n        const count = this.getSpanDivisorCount(duration);\r\n\r\n        function generateSpanDivisorsInner(i: number) {\r\n            let fraction = i / count;\r\n            fraction = timeWarpFunction && timeWarpFunction(fraction, vars) || fraction;\r\n\r\n            return {\r\n                time: (startTime + duration * fraction),\r\n                fraction: fraction\r\n            };\r\n        }\r\n\r\n        for (let i = 0; i < count; i++) {\r\n            yield generateSpanDivisorsInner(i);\r\n        }\r\n\r\n        if (includeEndPoint) {\r\n            yield generateSpanDivisorsInner(count);\r\n        }\r\n    }\r\n}\r\n\r\nexport class DivisorEmitterBeatFraction extends DivisorEmitter {\r\n    bpm: number;\r\n    beatDivisor: number; // whole number 1, 2, 4, etc...\r\n\r\n    get divisorSpan() {\r\n        return 60000 / this.bpm / this.beatDivisor;\r\n    }\r\n\r\n    getSpanDivisorCount(spanMs: number) {\r\n        return spanMs / this.divisorSpan;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.bpm = 120;\r\n        this.beatDivisor = 1;\r\n    }\r\n}\r\n\r\nexport class DivisorEmitterByCount extends DivisorEmitter {\r\n    count: number;\r\n\r\n    getSpanDivisorCount(span: number) {\r\n        return this.count;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.count = 2;\r\n    }\r\n}\r\n\r\nexport class DivisorEmitterTimeSpan extends DivisorEmitter {\r\n    span: number;\r\n\r\n    getSpanDivisorCount(span: number) {\r\n        return span / this.span;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.span = 100;\r\n    }\r\n}\r\n\r\nexport enum DivisorInputType {\r\n    Fixed,\r\n    BPM,\r\n    Span\r\n}\r\n","\r\n\r\n\r\nexport class OsuTimestamp {\r\n\r\n    _stampTime: number;\r\n\r\n    valid: boolean;\r\n\r\n    get time() {\r\n        return this._stampTime;\r\n    }\r\n\r\n    get osuTimestamp() {\r\n        const minutes = Math.floor(this.time / 60000);\r\n        const milliseconds = Math.floor(this.time % 1000);\r\n        const seconds = Math.floor((this._stampTime - minutes * 60000 - milliseconds) / 1000);\r\n\r\n        let strMinutes = minutes.toString();\r\n        if (minutes < 10) {\r\n            strMinutes = `0${minutes}`;\r\n        }\r\n\r\n        let strSeconds = seconds.toString();\r\n        if (seconds < 10) {\r\n            strSeconds = `0${seconds}`;\r\n        }\r\n\r\n        let strMilliseconds = milliseconds.toString();\r\n        if (milliseconds < 10) {\r\n            strMilliseconds = `0${milliseconds}`;\r\n        }\r\n\r\n        if (milliseconds < 100) {\r\n            strMilliseconds = `0${strMilliseconds}`;\r\n        }\r\n\r\n        return `${strMinutes}:${strSeconds}:${strMilliseconds}`;\r\n    }\r\n\r\n    static fromRegexResult(result): number {\r\n        const minutes = parseInt(result[1]);\r\n        const seconds = parseInt(result[2]);\r\n        const milliseconds = parseInt(result[3]);\r\n\r\n        return minutes * 60 * 1000 +\r\n            seconds * 1000 +\r\n            milliseconds;\r\n    }\r\n\r\n    constructor(stampText) {\r\n        const timestampRegex: RegExp = /(\\d{2,}):(\\d\\d):(\\d\\d\\d)/;\r\n        const result = timestampRegex.exec(stampText);\r\n        if (result) {\r\n            this._stampTime = OsuTimestamp.fromRegexResult(result);\r\n            this.valid = true;\r\n            return;\r\n        }\r\n\r\n        const timeResult = parseFloat(stampText);\r\n        if (!isNaN(timeResult) && isFinite(timeResult)) {\r\n            this._stampTime = timeResult;\r\n            this.valid = true;\r\n            return;\r\n        }\r\n\r\n        this.valid = false;\r\n    }\r\n}\r\n\r\nexport function validateTimestamp(text) {\r\n    const ts = new OsuTimestamp(text);\r\n    if (ts.valid) {\r\n        return ts.time;\r\n    } else {\r\n        return NaN;\r\n    }\r\n}\r\n\r\nexport function eventValidateTimestamp(event) {\r\n    const stamp = validateTimestamp(event.target.value);\r\n    if (!isNaN(stamp)) {\r\n        event.target.value = stamp;\r\n    }\r\n}\r\n","import {OsuTimingPoint} from './osu-timing-point';\r\nimport {DivisorEmitter, DivisorEmitterBeatFraction, CycleDivision} from './divisor-emitter';\r\nimport {CycleTimeEmitter, CycleTimeBeats, CycleOutput} from './cycle-time-emitter';\r\nimport {SvFunction, SvFunctionType} from './sv-functions';\r\n\r\ntype TimingList = IterableIterator<OsuTimingPoint>;\r\n\r\nexport class OsuTimingPointEmitter {\r\n  static* emitFixedBpm(cycle: CycleOutput,\r\n                       defaultTimingPoint: OsuTimingPoint,\r\n                       bpm: number): TimingList {\r\n\r\n    defaultTimingPoint.inherited = false;\r\n\r\n    const cl = cycle.cycle;\r\n    let it: IteratorResult<CycleDivision>;\r\n    while ((it = cl.next())) {\r\n      if (it.done) {\r\n        break;\r\n      }\r\n\r\n      const divisor = it.value;\r\n\r\n      const point = defaultTimingPoint.applyDifference(\r\n        {\r\n          time: divisor.time,\r\n          value: 60000 / bpm,\r\n          inherited: false\r\n        });\r\n\r\n      yield point;\r\n    }\r\n  }\r\n\r\n  static* emitBpmFunction(vars: any,\r\n                          cycle: CycleOutput,\r\n                          defaultTimingPoint: OsuTimingPoint,\r\n                          bpmFunction: (number, any) => number): TimingList {\r\n\r\n    let i = 0;\r\n\r\n    vars.builtin.divisorCount = cycle.count;\r\n\r\n    const cl = cycle.cycle;\r\n    let it: IteratorResult<CycleDivision>;\r\n    while ((it = cl.next())) {\r\n      if (it.done) {\r\n        break;\r\n      }\r\n\r\n      const divisor = it.value;\r\n      vars.builtin.currentDivisor = i;\r\n      i++;\r\n\r\n      const bpm = bpmFunction(divisor.fraction, vars);\r\n      if (isNaN(bpm)) {\r\n        continue;\r\n      }\r\n\r\n      const point = defaultTimingPoint.applyDifference({\r\n        time: divisor.time,\r\n        value: 60000 / bpm,\r\n        inherited: false\r\n      });\r\n\r\n      yield point;\r\n\r\n    }\r\n  }\r\n\r\n  static* emitSv(vars: any,\r\n                 cycle: CycleOutput,\r\n                 defaultTimingPoint: OsuTimingPoint,\r\n                 svFunction: (number, any) => number): TimingList {\r\n\r\n    let i = 0;\r\n    let lastSv = NaN;\r\n\r\n    // set useful builtin stuff\r\n    vars.builtin.divisorCount = cycle.count;\r\n\r\n    const cl = cycle.cycle;\r\n    let it: IteratorResult<CycleDivision>;\r\n    while ((it = cl.next())) {\r\n      if (it.done) {\r\n        break;\r\n      }\r\n\r\n      const divisor = it.value;\r\n      vars.builtin.currentDivisor = i;\r\n      i++;\r\n\r\n      // apply sv function\r\n      let multiplier = 1;\r\n      if (svFunction != null) {\r\n        multiplier = svFunction(divisor.fraction, vars);\r\n      }\r\n\r\n      // skip intentional NaNs\r\n      if (isNaN(multiplier) || multiplier == null) {\r\n        continue;\r\n      }\r\n\r\n      // create a timing point\r\n      const point = defaultTimingPoint.applyDifference({\r\n        time: divisor.time,\r\n        value: -100 / multiplier,\r\n        inherited: true\r\n      });\r\n\r\n      // yield if it's valid\r\n      if (multiplier !== lastSv) {\r\n        lastSv = multiplier;\r\n        yield point;\r\n      }\r\n\r\n      // else console.log(\"skipping value = \" + lastSv, \" fraction \" + divisor.fraction);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function emitTargets(\r\n  timeInput: CycleTimeEmitter,\r\n  divisors: DivisorEmitter,\r\n  svFunction: SvFunction,\r\n  timeFunction: SvFunction,\r\n  defaultTimingPoint: OsuTimingPoint,\r\n  fixedBpm: number,\r\n  includeDivisorAtEnd: boolean): OsuTimingPoint[] {\r\n  const output: OsuTimingPoint[] = [];\r\n  const cycleCount = timeInput.cycleCount;\r\n\r\n  function generateStaticBuiltinVariables(currentCycle: number) {\r\n    const builtin: any = {};\r\n\r\n    builtin.divisorBpm = null;\r\n    if (divisors instanceof DivisorEmitterBeatFraction) {\r\n      builtin.divisorBpm = (divisors as DivisorEmitterBeatFraction).bpm;\r\n    }\r\n\r\n    builtin.cycleBpm = null;\r\n    if (timeInput instanceof CycleTimeBeats) {\r\n      builtin.cycleBpm = (timeInput as CycleTimeBeats).bpm;\r\n    }\r\n\r\n    builtin.currentCycle = currentCycle;\r\n    builtin.cycleCount = cycleCount;\r\n\r\n    builtin.cycleSpan = timeInput.cycleDuration;\r\n    builtin.divisionSpan = timeInput.cycleDuration / divisors.getSpanDivisorCount(timeInput.cycleDuration);\r\n\r\n    return builtin;\r\n  }\r\n\r\n  const userFunctionSV = svFunction ? eval(svFunction.body) : null;\r\n  const userFunctionTime = timeFunction ? eval(timeFunction.body) : null;\r\n\r\n  const varsSv: any = svFunction ? SvFunction.getCurrentParameters(svFunction) : {};\r\n  const varsTime: any = timeFunction ? SvFunction.getCurrentParameters(timeFunction) : {};\r\n\r\n  for (let i = 0; i < cycleCount; i++) {\r\n    const builtin = generateStaticBuiltinVariables(i);\r\n    varsSv.builtin = builtin;\r\n    varsTime.builtin = builtin;\r\n\r\n    const cycleData = timeInput.createCycle(\r\n      i,\r\n      divisors,\r\n      userFunctionTime,\r\n      varsTime,\r\n      includeDivisorAtEnd && (i === (cycleCount - 1))\r\n    );\r\n\r\n    let cycleResult: TimingList;\r\n\r\n    if (svFunction) {\r\n      if (svFunction.type === SvFunctionType.BPM) {\r\n        cycleResult = OsuTimingPointEmitter.emitBpmFunction(\r\n          varsSv,\r\n          cycleData,\r\n          defaultTimingPoint,\r\n          userFunctionSV);\r\n      } else {\r\n        cycleResult = OsuTimingPointEmitter.emitSv(\r\n          varsSv,\r\n          cycleData,\r\n          defaultTimingPoint,\r\n          userFunctionSV);\r\n      }\r\n    } else {\r\n      cycleResult = OsuTimingPointEmitter.emitFixedBpm(\r\n        cycleData,\r\n        defaultTimingPoint,\r\n        fixedBpm);\r\n    }\r\n\r\n    let res = cycleResult.next();\r\n    while (!res.done) {\r\n      output.push(res.value);\r\n      res = cycleResult.next();\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n","export enum SampleSet {\r\n  Auto,\r\n  Normal,\r\n  Soft,\r\n  Drum\r\n}\r\n\r\nexport interface OsuTimingPointDifference {\r\n  time?: number;\r\n  value?: number;\r\n  kiai?: boolean;\r\n  volume?: number;\r\n  sampleSet?: SampleSet;\r\n  sampleIndex?: number;\r\n  measureLength?: number;\r\n  inherited?: boolean;\r\n}\r\n\r\nexport class OsuTimingPoint {\r\n  /* in MS */\r\n  time = 0;\r\n\r\n  /*\r\n      if uninherited, it's beatspace\r\n      if inherited, it's -100 / SV\r\n  */\r\n  value: number = 60000 / 120;\r\n\r\n  kiai = false;\r\n\r\n  volume = 15;\r\n\r\n\r\n  sampleSet: SampleSet = SampleSet.Auto;\r\n  sampleIndex = 0;\r\n  measureLength = 4;\r\n\r\n  inherited = false;\r\n\r\n  get svMultiplier() {\r\n    return -100 / this.value;\r\n  }\r\n\r\n  static fromString(s: string): OsuTimingPoint {\r\n    const arr = s.split(',');\r\n    const tp = new OsuTimingPoint();\r\n    tp.time = parseFloat(arr[0]);\r\n    tp.value = parseFloat(arr[1]);\r\n    tp.measureLength = parseInt(arr[2], 10);\r\n    tp.sampleSet = parseInt(arr[3], 10);\r\n    tp.sampleIndex = parseInt(arr[4], 10);\r\n    tp.volume = parseInt(arr[5], 10);\r\n    tp.inherited = (arr[6] !== '1');\r\n    tp.kiai = (arr[7] === '1');\r\n\r\n    return tp;\r\n  }\r\n\r\n  constructor() {\r\n    this.time = 0;\r\n    this.value = 60000 / 120;\r\n    this.kiai = false;\r\n    this.volume = 15;\r\n    this.sampleSet = SampleSet.Auto;\r\n    this.sampleIndex = 0;\r\n    this.measureLength = 4;\r\n    this.inherited = false;\r\n  }\r\n\r\n  get inheritedInt() {\r\n    return (this.inherited === true) ? 0 : 1;\r\n  }\r\n\r\n  get kiaiInt() {\r\n    return this.kiai ? 1 : 0;\r\n  }\r\n\r\n  get roundedTime() {\r\n    return Math.round(this.time);\r\n  }\r\n\r\n  toString() {\r\n    return `${this.time},${this.value},${this.measureLength},` +\r\n      `${this.sampleSet},${this.sampleIndex},${this.volume},` +\r\n      `${this.inheritedInt},${this.kiaiInt}`;\r\n  }\r\n\r\n\r\n  applyDifference(changes: OsuTimingPointDifference) {\r\n    const ret = new OsuTimingPoint();\r\n    ret.time = changes && changes.time || this.time;\r\n    ret.value = changes && changes.value || this.value;\r\n    ret.kiai = changes && changes.kiai || this.kiai;\r\n    ret.volume = changes && changes.volume || this.volume;\r\n    ret.sampleSet = changes && changes.sampleSet || this.sampleSet;\r\n    ret.sampleIndex = changes && changes.sampleIndex || this.sampleIndex;\r\n    ret.measureLength = changes && changes.measureLength || this.measureLength;\r\n    if (changes && changes.inherited !== undefined) {\r\n      ret.inherited = changes.inherited;\r\n    } else {\r\n      ret.inherited = this.inherited;\r\n    }\r\n    return ret;\r\n  }\r\n}\r\n\r\n\r\n// left-biased binary search for timing points\r\nfunction osuTPBinSearch(tpl: OsuTimingPoint[], time: number): number {\r\n  let left = 0;\r\n  let right = tpl.length;\r\n  let center: number;\r\n\r\n  while (left < right) {\r\n    center = Math.floor((left + right) / 2);\r\n    const val = tpl[center].time;\r\n\r\n    if (val < time) {\r\n      left = center + 1;\r\n    } else {\r\n      right = center;\r\n    }\r\n  }\r\n\r\n  // bias it\r\n  while (left > 0 && (left >= tpl.length || tpl[left].time > time)) {\r\n    left--;\r\n  }\r\n\r\n  return left;\r\n}\r\n\r\n// assumption: these timing points are sorted, they're also sv changes.\r\nexport function composeTimingPoints(set1: OsuTimingPoint[],\r\n                                    set2: OsuTimingPoint[],\r\n                                    template: OsuTimingPoint): OsuTimingPoint[] {\r\n  let ret: OsuTimingPoint[] = [];\r\n\r\n\r\n  const ui1 = set1.filter(x => !x.inherited);\r\n  const ui2 = set2.filter(x => !x.inherited);\r\n\r\n  set1 = set1.filter(x => x.inherited);\r\n  set2 = set2.filter(x => x.inherited);\r\n\r\n\r\n  // Apply all of set 2 to set 1\r\n  for (const tp of set1) {\r\n    const s2Cur = set2[osuTPBinSearch(set2, tp.time)];\r\n\r\n    // affectd by s2 (tp comes after s2)\r\n    if (s2Cur.time <= tp.time) {\r\n      const ntp = template.applyDifference({\r\n        time: tp.time,\r\n        value: -100 / (s2Cur.svMultiplier * tp.svMultiplier),\r\n        inherited: true\r\n      });\r\n\r\n      ret.push(ntp);\r\n    }\r\n\r\n    // not affected by s2 (tp comes before s2)\r\n    if (s2Cur.time > tp.time) {\r\n      const ntp = template.applyDifference({\r\n        time: tp.time,\r\n        value: -100 / (tp.svMultiplier),\r\n        inherited: true\r\n      });\r\n\r\n      ret.push(ntp);\r\n    }\r\n  }\r\n\r\n  // Add the timing points of set 2 not in t1, including those with equal times.\r\n  for (const tp of set2) {\r\n    const s1Cur = set1[osuTPBinSearch(set1, tp.time)];\r\n\r\n    //  tp's time is not in set1\r\n    if (s1Cur.time !== tp.time) {\r\n\r\n      // not affected by s1 (closest s1 comes after tp)\r\n      if (s1Cur.time > tp.time) {\r\n        const ntp = template.applyDifference(({\r\n          time: tp.time,\r\n          value: -100 / (tp.svMultiplier),\r\n          inherited: true\r\n        }));\r\n\r\n        ret.push(ntp);\r\n      }\r\n\r\n      // affected by s1 (closest s1 comes before tp)\r\n      if (s1Cur.time < tp.time) {\r\n        const ntp = template.applyDifference(({\r\n          time: tp.time,\r\n          value: -100 / (s1Cur.svMultiplier * tp.svMultiplier),\r\n          inherited: true\r\n        }));\r\n\r\n        ret.push(ntp);\r\n      }\r\n    }\r\n  }\r\n\r\n  ret = ret.concat(ui1).concat(ui2);\r\n  ret.sort((a, b) => a.time - b.time);\r\n  return ret;\r\n}\r\n","import { builtinSv } from './builtin-sv-functions';\r\n\r\nexport enum SvFunctionType {\r\n  SV,\r\n  BPM\r\n}\r\n\r\nexport class SvParameter {\r\n    name: string;\r\n    description: string;\r\n    defaultValue: any;\r\n    currentValue: any;\r\n\r\n    constructor() {\r\n        this.name = 'unnamed';\r\n        this.description = '';\r\n        this.defaultValue = '0';\r\n    }\r\n}\r\n\r\nexport type SvFunctionParams = SvParameter[];\r\n\r\nexport class SvFunction {\r\n\r\n    static defaultName = 'unnamed';\r\n\r\n    name: string;\r\n    tooltip: string;\r\n    body: string;\r\n    parameters: SvFunctionParams;\r\n    type: SvFunctionType;\r\n\r\n    get isBpm() {\r\n      return this.type === SvFunctionType.BPM;\r\n    }\r\n\r\n    set isBpm(value: boolean) {\r\n      this.type = value ? SvFunctionType.BPM : SvFunctionType.SV;\r\n    }\r\n\r\n\r\n    constructor(type: SvFunctionType) {\r\n        this.parameters = [];\r\n        this.type = type;\r\n\r\n        if (type === SvFunctionType.SV || type === SvFunctionType.BPM) {\r\n          this.body =\r\n            `(() => {\r\n    // Put your inner state here\r\n    // var persistent = 10;\r\n\r\n    // Return SV value given fraction x\r\n    // user param are strings: param[\"myParamName\"]\r\n    return (x, params) => {\r\n        return 1;\r\n    }\r\n})();`;\r\n        } else {\r\n          this.body = ''; // todo xoxo\r\n        }\r\n        this.name = SvFunction.defaultName;\r\n        this.tooltip = '';\r\n    }\r\n\r\n    static getCurrentParameters(it: any): any {\r\n      const ret: any = {};\r\n      for (const param of it.parameters) {\r\n        if (param.currentValue) {\r\n          ret[param.name] = param.currentValue;\r\n        } else {\r\n          const val = parseFloat(param.defaultValue);\r\n          if (isNaN(val)) {\r\n            ret[param.name] = param.defaultValue;\r\n          }\r\n          else {\r\n            ret[param.name] = val;\r\n          }\r\n        }\r\n      }\r\n\r\n      return ret;\r\n    }\r\n}\r\n\r\nexport class SvFunctionCollection {\r\n    static getCollection() {\r\n        return JSON.parse(localStorage.getItem('svCollection')) || builtinSv || {};\r\n    }\r\n\r\n    static setCollection(obj: any) {\r\n        return localStorage.setItem('svCollection', JSON.stringify(obj));\r\n    }\r\n\r\n    constructor() {\r\n    }\r\n}\r\n","module.exports = \"textarea {\\r\\n  min-height: 300px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9zZS1lbWl0dGVycy9jb21wb3NlLWVtaXR0ZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxrQkFBa0I7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb3NlLWVtaXR0ZXJzL2NvbXBvc2UtZW1pdHRlcnMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcclxuICBtaW4taGVpZ2h0OiAzMDBweDtcclxufVxyXG4iXX0= */\"","module.exports = \"<br>\\r\\n\\r\\n<div class=\\\"col\\\">\\r\\n\\r\\n  <h1>Compose Emitters</h1>\\r\\n\\r\\n  <div class=\\\"padder\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-title>\\r\\n        Emitters\\r\\n      </mat-card-title>\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button (click)=\\\"addEmitter()\\\">Add Emitter</button>\\r\\n      </mat-card-actions>\\r\\n      <mat-card-content>\\r\\n        <ng-template #container>\\r\\n        </ng-template>\\r\\n      </mat-card-content>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"padder\\\">\\r\\n    <mat-card>\\r\\n      <mat-card-title>\\r\\n        Timing point parameters and combined output\\r\\n      </mat-card-title>\\r\\n\\r\\n      <mat-card-content>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-4\\\">\\r\\n              <app-timing-point-template></app-timing-point-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-8\\\">\\r\\n              <textarea matInput placeholder=\\\"output will be here\\\" [(ngModel)]=\\\"output\\\"></textarea>\\r\\n            </div>\\r\\n          </div>\\r\\n      </mat-card-content>\\r\\n\\r\\n      <mat-card-actions>\\r\\n        <button mat-raised-button (click)=\\\"emit()\\\">Emit</button>\\r\\n      </mat-card-actions>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\"","import {Component, ComponentFactory, ComponentFactoryResolver, ComponentRef, OnInit, ViewChild, ViewContainerRef} from '@angular/core';\r\nimport {TimingPointTemplateComponent} from '../emitter-input/timeinput/timing-point-template/timing-point-template.component';\r\nimport {EmitterParameterTrioComponent} from './emitter-parameter-trio/emitter-parameter-trio.component';\r\nimport {composeTimingPoints, OsuTimingPoint} from '../blackhole-classes/osu-timing-point';\r\nimport {template} from '@angular/core/src/render3';\r\n\r\n@Component({\r\n  selector: 'app-compose-emitters',\r\n  templateUrl: './compose-emitters.component.html',\r\n  styleUrls: ['./compose-emitters.component.css'],\r\n  entryComponents: [EmitterParameterTrioComponent]\r\n})\r\nexport class ComposeEmittersComponent implements OnInit {\r\n  output: string;\r\n\r\n  @ViewChild(TimingPointTemplateComponent)\r\n  tpTemplate: TimingPointTemplateComponent;\r\n\r\n  @ViewChild('container', {read: ViewContainerRef})\r\n  container: ViewContainerRef;\r\n\r\n  factory: ComponentFactory<EmitterParameterTrioComponent>;\r\n\r\n  emitters: ComponentRef<EmitterParameterTrioComponent>[];\r\n\r\n  constructor(private cfr: ComponentFactoryResolver) {\r\n    this.factory = cfr.resolveComponentFactory(EmitterParameterTrioComponent);\r\n    this.emitters = [];\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  addEmitter() {\r\n    const el = this.container.createComponent(this.factory);\r\n    this.emitters.push(el);\r\n    el.instance.onRemove.subscribe(this.removeEmitter.bind(this));\r\n  }\r\n\r\n  removeEmitter(emitter) {\r\n    // get componentref for emitter\r\n    const ref = this.emitters.find(x => x.instance === emitter);\r\n\r\n\r\n    // remove from viewref\r\n    const index = this.container.indexOf(ref.hostView);\r\n    if (index !== -1) {\r\n      this.container.remove(index);\r\n    }\r\n\r\n    // remove from internal tracking\r\n    const emIndex = this.emitters.indexOf(ref);\r\n    if (emIndex !== -1) {\r\n      this.emitters.splice(emIndex, 1);\r\n    }\r\n  }\r\n\r\n  emit() {\r\n    const tp = this.tpTemplate.currentTimingPoint;\r\n    let combined: OsuTimingPoint [] = this.emitters[0].instance.emit(tp);\r\n    for (let i = 1; i < this.emitters.length; i++) {\r\n      const group = this.emitters[i].instance.emit(tp);\r\n      combined = composeTimingPoints(combined, group, tp);\r\n    }\r\n\r\n    this.output = combined.map(x => x.toString()).join('\\n');\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvc2UtZW1pdHRlcnMvZW1pdHRlci1wYXJhbWV0ZXItdHJpby9lbWl0dGVyLXBhcmFtZXRlci10cmlvLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-expansion-panel>\\r\\n  <mat-expansion-panel-header>\\r\\n    <mat-panel-title>{{functitle}} Emitter</mat-panel-title>\\r\\n  <mat-panel-description>\\r\\n    Time: {{timeInput.currentTimeInput.startTime}}\\r\\n    Effect: {{functitle}}\\r\\n  </mat-panel-description>\\r\\n  </mat-expansion-panel-header>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-timeinput></app-timeinput>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-divisorinput></app-divisorinput>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <app-select-emitter-function></app-select-emitter-function>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <mat-action-row>\\r\\n    <button mat-raised-button (click)=\\\"removeSelf()\\\">Remove</button>\\r\\n  </mat-action-row>\\r\\n</mat-expansion-panel>\\r\\n\\r\\n\"","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {TimeinputComponent} from '../../emitter-input/timeinput/timeinput.component';\r\nimport {DivisorinputComponent} from '../../emitter-input/divisorinput/divisorinput.component';\r\nimport {SelectEmitterFunctionComponent} from '../../emitter-input/select-emitter-function/select-emitter-function.component';\r\nimport {OsuTimingPoint} from '../../blackhole-classes/osu-timing-point';\r\nimport {emitTargets} from '../../blackhole-classes/osu-timing-point-emitter';\r\n\r\n@Component({\r\n  selector: 'app-emitter-parameter-trio',\r\n  templateUrl: './emitter-parameter-trio.component.html',\r\n  styleUrls: ['./emitter-parameter-trio.component.css']\r\n})\r\nexport class EmitterParameterTrioComponent implements OnInit {\r\n  @ViewChild(TimeinputComponent)\r\n  timeInput: TimeinputComponent;\r\n\r\n  @ViewChild(DivisorinputComponent)\r\n  divisorInput: DivisorinputComponent;\r\n\r\n  @ViewChild(SelectEmitterFunctionComponent)\r\n  funcInput: SelectEmitterFunctionComponent;\r\n\r\n  @Output() onRemove = new EventEmitter();\r\n\r\n\r\n  includeDivisorAtEnd: boolean;\r\n\r\n  get functitle() {\r\n    if (this.funcInput.currentFunction) {\r\n      return this.funcInput.currentFunction.name;\r\n    } else {\r\n      if (this.funcInput.useFixedBpm)\r\n        return \"bpm: \" + this.funcInput.bpm;\r\n    }\r\n\r\n    return \"unknown\";\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  removeSelf() {\r\n    this.onRemove.emit(this);\r\n  }\r\n\r\n  emit(template: OsuTimingPoint) : OsuTimingPoint[] {\r\n    const ti = this.timeInput.currentTimeInput;\r\n    const di = this.divisorInput.currentDivisorInput;\r\n    const fp = this.funcInput;\r\n    const func = fp.useFixedBpm ? null : fp.currentFunction;\r\n\r\n    return emitTargets(\r\n      ti,\r\n      di,\r\n      func,\r\n      fp.currentTimeFunction,\r\n      template,\r\n      fp.bpm,\r\n      this.includeDivisorAtEnd\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvc2UtdGltaW5nLXBvaW50cy9jb21wb3NlLXRpbWluZy1wb2ludHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<br>\\r\\n<div class=\\\"col\\\">\\r\\n<mat-card>\\r\\n  <mat-card-title>Compose timing points</mat-card-title>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <textarea matInput placeholder=\\\"first timing point set\\\" [(ngModel)]=\\\"set1lines\\\"></textarea>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n      <textarea matInput placeholder=\\\"second timing point set\\\" [(ngModel)]=\\\"set2lines\\\"></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n  <button mat-raised-button (click)=\\\"compose()\\\">Compose</button>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n  <textarea matInput readonly placeholder=\\\"output will be here\\\" [(ngModel)]=\\\"output\\\"></textarea>\\r\\n</mat-card>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {composeTimingPoints, OsuTimingPoint} from '../blackhole-classes/osu-timing-point';\r\n\r\n@Component({\r\n  selector: 'app-compose-timing-points',\r\n  templateUrl: './compose-timing-points.component.html',\r\n  styleUrls: ['./compose-timing-points.component.css']\r\n})\r\nexport class ComposeTimingPointsComponent implements OnInit {\r\n  set1lines: string;\r\n  set2lines: string;\r\n  output: string;\r\n\r\n  constructor() {\r\n    this.set1lines = '';\r\n    this.set2lines = '';\r\n    this.output = '';\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  compose() {\r\n    const set1 = this.set1lines.split('\\n').map(x => OsuTimingPoint.fromString(x));\r\n    const set2 = this.set2lines.split('\\n').map(x => OsuTimingPoint.fromString(x));\r\n    const composedOutput = composeTimingPoints(set1, set2, set1[0]);\r\n\r\n    this.output = composedOutput.map(x => x.toString()).join('\\n');\r\n  }\r\n}\r\n","module.exports = \"textarea {\\r\\n    min-height: 300px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1pc3Npb24tY29udHJvbC9lbWlzc2lvbi1jb250cm9sLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9lbWlzc2lvbi1jb250cm9sL2VtaXNzaW9uLWNvbnRyb2wuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRleHRhcmVhIHtcclxuICAgIG1pbi1oZWlnaHQ6IDMwMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<br>\\r\\n<div class=\\\"col\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title>Time control</mat-card-title>\\r\\n        <app-timeinput></app-timeinput>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title>Divisor control</mat-card-title>\\r\\n        <app-divisorinput></app-divisorinput>\\r\\n        <!-- <div class=\\\"alert alert-secondary\\\">\\r\\n          <strong>Total divisors: </strong> <br>\\r\\n          {{ currentDivisors }}\\r\\n        </div> -->\\r\\n        <mat-checkbox [(ngModel)]=\\\"includeDivisorAtEnd\\\"> Include divisor at end of last cycle </mat-checkbox>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title>\\r\\n          Timing point template\\r\\n        </mat-card-title>\\r\\n        <app-timing-point-template></app-timing-point-template>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title>Emission control</mat-card-title>\\r\\n        <app-select-emitter-function></app-select-emitter-function>\\r\\n\\r\\n        <!-- Emit section -->\\r\\n        <button mat-raised-button [disabled]=\\\"!(funcParams.currentFunction || funcParams.useFixedBpm)\\\" (click)=\\\"emit()\\\">\\r\\n          Emit\\r\\n        </button>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"error\\\">\\r\\n    <div class=\\\"col-md-2\\\"></div>\\r\\n    <div class=\\\"alert alert-danger col-md-8\\\">\\r\\n      <strong>Error: </strong>\\r\\n      <br>\\r\\n      <b>line:</b> {{ error.lineNumber }} <br>\\r\\n      <b>message: </b>  <br>\\r\\n      {{ error.message }}\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\"></div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-12 padder\\\">\\r\\n      <mat-card>\\r\\n        <mat-card-title>\\r\\n          Output area\\r\\n        </mat-card-title>\\r\\n        <button mat-raised-button (click)=\\\"output = ''\\\">Clear...</button>\\r\\n        <button mat-raised-button (click)=\\\"outputArea.select()\\\">Select all</button>\\r\\n        <textarea matInput #outputArea readonly placeholder=\\\"output will be here\\\" [value]=\\\"output\\\"></textarea>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {TimeinputComponent} from '../emitter-input/timeinput/timeinput.component';\r\nimport {DivisorinputComponent} from '../emitter-input/divisorinput/divisorinput.component';\r\nimport {TimingPointTemplateComponent} from '../emitter-input/timeinput/timing-point-template/timing-point-template.component';\r\nimport {emitTargets} from '../blackhole-classes/osu-timing-point-emitter';\r\nimport {SelectEmitterFunctionComponent} from '../emitter-input/select-emitter-function/select-emitter-function.component';\r\n\r\n@Component({\r\n  selector: 'app-emission-control',\r\n  templateUrl: './emission-control.component.html',\r\n  styleUrls: ['./emission-control.component.css']\r\n})\r\nexport class EmissionControlComponent implements OnInit {\r\n  @ViewChild(TimeinputComponent)\r\n  timeInput: TimeinputComponent;\r\n\r\n  @ViewChild(DivisorinputComponent)\r\n  divisorInput: DivisorinputComponent;\r\n\r\n  @ViewChild(TimingPointTemplateComponent)\r\n  timingPointTemplate: TimingPointTemplateComponent;\r\n\r\n  @ViewChild(SelectEmitterFunctionComponent)\r\n  funcParams: SelectEmitterFunctionComponent;\r\n\r\n  output: string;\r\n\r\n  error: any;\r\n\r\n  includeDivisorAtEnd: boolean;\r\n\r\n  constructor() {\r\n    this.error = null;\r\n    this.output = '';\r\n    // this.output = \"hello world\";\r\n  }\r\n\r\n\r\n  emit() {\r\n    const timeInput = this.timeInput.currentTimeInput;\r\n    const divInput = this.divisorInput.currentDivisorInput;\r\n    const timingDefault = this.timingPointTemplate.currentTimingPoint;\r\n\r\n    // console.log(timeInput);\r\n    // console.log(divInput);\r\n    // console.log(timingDefault);\r\n\r\n    try {\r\n      const result = emitTargets(\r\n        timeInput,\r\n        divInput,\r\n        /*\r\n        todo: wrap this extra funcParams data into\r\n        its own type that doesn't depend on the component\r\n        */\r\n        this.funcParams.useFixedBpm ? null : this.funcParams.currentFunction,\r\n        this.funcParams.currentTimeFunction,\r\n        timingDefault,\r\n        this.funcParams.bpm,\r\n        this.includeDivisorAtEnd\r\n      ).map(x => x.toString());\r\n\r\n      this.output = result.join('\\n');\r\n      this.error = null;\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      this.error = err;\r\n    }\r\n  }\r\n\r\n  /*get currentDivisors() {\r\n    const di = this.divisorInput.currentDivisorInput;\r\n    const ti = this.timeInput.currentTimeInput;\r\n    const arr = new Set();\r\n    for (let i = 0; i < ti.cycleCount; i++) {\r\n      arr.add(Math.floor(di.getSpanDivisorCount(ti.getDuration(i))));\r\n    }\r\n\r\n    return Array.from(arr).join(', ');\r\n  }\r\n*/\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvZGl2aXNvcmlucHV0L2Rpdmlzb3JpbnB1dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n    <mat-select placeholder=\\\"Divisor Type\\\" [(ngModel)]=\\\"type\\\" (ngModelChange)=\\\"onTypeChange($event)\\\" class=\\\"fullwidth\\\">\\r\\n        <mat-option [value]=\\\"DivisorInputType.Fixed\\\">\\r\\n            Fixed\\r\\n        </mat-option>\\r\\n        <mat-option [value]=\\\"DivisorInputType.BPM\\\">\\r\\n            BPM\\r\\n        </mat-option>\\r\\n        <mat-option [value]=\\\"DivisorInputType.Span\\\">\\r\\n            Span\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<div *ngIf=\\\"type === DivisorInputType.Fixed\\\">\\r\\n    <mat-form-field class=\\\"fullwidth\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Count\\\" [(ngModel)]=\\\"currentDivisorInput.count\\\">\\r\\n    </mat-form-field>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"type === DivisorInputType.BPM\\\">\\r\\n    <mat-form-field class=\\\"fullwidth\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"BPM\\\" [(ngModel)]=\\\"currentDivisorInput.bpm\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <mat-form-field class=\\\"fullwidth\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Divisions per beat\\\" [(ngModel)]=\\\"currentDivisorInput.beatDivisor\\\">\\r\\n    </mat-form-field>\\r\\n    <br>\\r\\n    <div class=\\\"alert alert-secondary\\\">\\r\\n        <b>Division Span (MS):</b> {{ currentDivisorInput.divisorSpan }}\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"type === DivisorInputType.Span\\\">\\r\\n    <mat-form-field class=\\\"fullwidth\\\">\\r\\n        <input matInput type=\\\"number\\\" placeholder=\\\"Span (MS)\\\" [(ngModel)]=\\\"currentDivisorInput.span\\\">\\r\\n    </mat-form-field>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { DivisorEmitter, DivisorEmitterByCount, DivisorEmitterBeatFraction, DivisorInputType, DivisorEmitterTimeSpan } from '../../blackhole-classes/divisor-emitter';\r\n\r\n@Component({\r\n  selector: 'app-divisorinput',\r\n  templateUrl: './divisorinput.component.html',\r\n  styleUrls: ['./divisorinput.component.css']\r\n})\r\nexport class DivisorinputComponent implements OnInit {\r\n\r\n  type: DivisorInputType;\r\n\r\n  currentDivisorInput: DivisorEmitter;\r\n\r\n  DivisorInputType = DivisorInputType;\r\n\r\n  constructor() { \r\n    this.type = DivisorInputType.Fixed;\r\n    this.onTypeChange(null);\r\n  }\r\n\r\n  onTypeChange(e) {\r\n    if (this.type === DivisorInputType.Fixed)\r\n      this.currentDivisorInput = new DivisorEmitterByCount();\r\n    if (this.type === DivisorInputType.BPM)\r\n      this.currentDivisorInput = new DivisorEmitterBeatFraction();\r\n    if (this.type === DivisorInputType.Span)\r\n      this.currentDivisorInput = new DivisorEmitterTimeSpan();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvc2VsZWN0LWVtaXR0ZXItZnVuY3Rpb24vZW1pc3Npb24tZnVuY3Rpb24tcGFyYW1ldGVycy1hc3NpZ25tZW50L2VtaXNzaW9uLWZ1bmN0aW9uLXBhcmFtZXRlcnMtYXNzaWdubWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-dialog-content>\\r\\n  <h2 mat-dialog-title>Function Parameters</h2>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <b>\\r\\n        Parameter Name\\r\\n      </b>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <b>\\r\\n        Description\\r\\n      </b>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <b>\\r\\n       Value\\r\\n      </b>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\" *ngFor=\\\"let param of target.parameters\\\">\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      {{ param.name }}\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      {{ param.description }}\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Value\\\" [(ngModel)]=\\\"param.currentValue\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <hr>\\r\\n  </div>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button mat-dialog-close>Close</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA} from '@angular/material';\r\nimport {SvFunction} from '../../../blackhole-classes/sv-functions';\r\n\r\n@Component({\r\n  selector: 'app-emission-function-parameters-assignment',\r\n  templateUrl: './emission-function-parameters-assignment.component.html',\r\n  styleUrls: ['./emission-function-parameters-assignment.component.css']\r\n})\r\nexport class EmissionFunctionParametersAssignmentComponent implements OnInit {\r\n\r\n  target: SvFunction;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) {\r\n    console.log(data.target);\r\n    this.target = data.target;\r\n\r\n    for (let i = 0; i < this.target.parameters.length; i++) {\r\n      if (!this.target.parameters[i].currentValue) {\r\n        const val: any = parseFloat(this.target.parameters[i].defaultValue) ||\r\n                         this.target.parameters[i].defaultValue;\r\n\r\n        this.target.parameters[i].currentValue = val;\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvc2VsZWN0LWVtaXR0ZXItZnVuY3Rpb24vc2VsZWN0LWVtaXNzaW9uLWZ1bmN0aW9uLWRpYWxvZy9zZWxlY3QtZW1pc3Npb24tZnVuY3Rpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-dialog-content>\\r\\n  <h2 matDialogTitle>Select emission function...</h2>\\r\\n  <mat-select [(ngModel)]=\\\"selectedFunction\\\">\\r\\n    <mat-option *ngFor=\\\"let func of collection\\\" [value]=\\\"func\\\">\\r\\n      {{ SvFunctionType[func.type || 0] }} - {{ func.name }}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"selectedFunction\\\">Select</button>\\r\\n  <button mat-button mat-dialog-close>Cancel</button>\\r\\n</mat-dialog-actions>\\r\\n\"","import {Component, Inject, OnInit} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport {SvFunction, SvFunctionCollection, SvFunctionType} from '../../../blackhole-classes/sv-functions';\r\n\r\n\r\n/*\r\nRefresher: this is the dropdown that is in select-emitter-function.\r\nShould be used only internally, in select-emitter-function.\r\n*/\r\n@Component({\r\n  selector: 'app-select-emission-function-dialog',\r\n  templateUrl: './select-emission-function-dialog.component.html',\r\n  styleUrls: ['./select-emission-function-dialog.component.css']\r\n})\r\nexport class SelectEmissionFunctionDialogComponent implements OnInit {\r\n\r\n  collection: SvFunction[];\r\n\r\n  SvFunctionType = SvFunctionType;\r\n\r\n  selectedFunction: SvFunction;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SelectEmissionFunctionDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n    this.collection = [];\r\n\r\n    // console.log(this.SvFunctionType);\r\n\r\n    const typeSet = new Set(data.allowedFunctionTypes);\r\n    // console.log(typeSet);\r\n\r\n    const funcCollection = SvFunctionCollection.getCollection();\r\n    // console.log(funcCollection);\r\n    for (const key in funcCollection) {\r\n      const func = funcCollection[key];\r\n      const isSvFunction = func.type === undefined || func.type === SvFunctionType.SV;\r\n\r\n      // console.log(func);\r\n      // console.log(isSvFunction);\r\n\r\n      // only allowed functions are displayed in this dialog\r\n      if ((isSvFunction && typeSet.has(SvFunctionType.SV) ||\r\n          typeSet.has(func.type))) {\r\n            this.collection.push(func);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".grey {\\r\\n  color: red;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZW1pdHRlci1pbnB1dC9zZWxlY3QtZW1pdHRlci1mdW5jdGlvbi9zZWxlY3QtZW1pdHRlci1mdW5jdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztDQUNaIiwiZmlsZSI6InNyYy9hcHAvZW1pdHRlci1pbnB1dC9zZWxlY3QtZW1pdHRlci1mdW5jdGlvbi9zZWxlY3QtZW1pdHRlci1mdW5jdGlvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyZXkge1xyXG4gIGNvbG9yOiByZWQ7XHJcbn1cclxuIl19 */\"","module.exports = \"<mat-checkbox [(ngModel)]=\\\"useFixedBpm\\\">Use Fixed BPM</mat-checkbox>\\r\\n<hr>\\r\\n<!-- Function section -->\\r\\n<div *ngIf=\\\"!useFixedBpm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <h4>SV/BPM function</h4>\\r\\n    <div class=\\\"col-md-12 text-center\\\" [class.grey]=\\\"!currentFunction\\\">\\r\\n      {{ currentFunction && currentFunction.name || \\\"no function selected\\\" }}\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 text-center\\\">\\r\\n      <button mat-raised-button (click)=\\\"selectFunction(false)\\\">Select function</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4 text-center\\\">\\r\\n      <button mat-raised-button (click)=\\\"setParameters(false)\\\" [disabled]=\\\"!currentFunction\\\">\\r\\n        Set Parameters\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Fixed BPM section -->\\r\\n<div *ngIf=\\\"useFixedBpm\\\">\\r\\n  <input matInput type=\\\"number\\\" placeholder=\\\"BPM\\\" [(ngModel)]=\\\"bpm\\\">\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\\r\\n<!-- Time deformation -->\\r\\n<div class=\\\"row\\\">\\r\\n  <h4>Time Deformation function</h4>\\r\\n  <div class=\\\"col-md-12 text-center\\\" [class.grey]=\\\"!currentTimeFunction\\\">\\r\\n    {{ currentTimeFunction && currentTimeFunction.name || \\\"no function selected\\\" }}\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-6 text-center\\\">\\r\\n    <button mat-raised-button (click)=\\\"selectFunction(true)\\\">Select function</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-4 text-center\\\">\\r\\n    <button mat-raised-button (click)=\\\"setParameters(true)\\\" [disabled]=\\\"!currentTimeFunction\\\">\\r\\n      Set Parameters\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<hr>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {SvFunction, SvFunctionType} from '../../blackhole-classes/sv-functions';\r\nimport {SelectEmissionFunctionDialogComponent} from './select-emission-function-dialog/select-emission-function-dialog.component';\r\nimport {MatDialog} from '@angular/material';\r\nimport {EmissionFunctionParametersAssignmentComponent} from './emission-function-parameters-assignment/emission-function-parameters-assignment.component';\r\n\r\n/* This is the actual function, time function and parameter setting component that's reusable. */\r\n@Component({\r\n  selector: 'app-select-emitter-function',\r\n  templateUrl: './select-emitter-function.component.html',\r\n  styleUrls: ['./select-emitter-function.component.css']\r\n})\r\nexport class SelectEmitterFunctionComponent implements OnInit {\r\n\r\n  useFixedBpm: boolean;\r\n  bpm: number;\r\n  currentFunction: SvFunction;\r\n  currentTimeFunction: SvFunction;\r\n\r\n  constructor(public dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.bpm = 120;\r\n  }\r\n\r\n  selectFunction(isForTimeDeformation: boolean) {\r\n    if (isForTimeDeformation) {\r\n      const funcDialog = this.dialog.open(SelectEmissionFunctionDialogComponent, {\r\n        data: {\r\n          allowedFunctionTypes: [SvFunctionType.SV]\r\n        }\r\n      });\r\n\r\n      funcDialog.afterClosed().subscribe((x) => {\r\n        this.currentTimeFunction = x;\r\n      });\r\n\r\n    } else {\r\n      const funcDialog = this.dialog.open(SelectEmissionFunctionDialogComponent, {\r\n        data: {\r\n          allowedFunctionTypes: [SvFunctionType.SV, SvFunctionType.BPM]\r\n        }\r\n      });\r\n\r\n      funcDialog.afterClosed().subscribe((x) => {\r\n        this.currentFunction = x;\r\n      });\r\n    }\r\n  }\r\n\r\n  setParameters(isForTimeDeformation: boolean) {\r\n\r\n    if (isForTimeDeformation) {\r\n\r\n      this.dialog.open(EmissionFunctionParametersAssignmentComponent, {\r\n        height: '400px',\r\n        width: '800px',\r\n        data: {\r\n          target: this.currentTimeFunction\r\n        }\r\n      });\r\n\r\n    } else {\r\n\r\n      this.dialog.open(EmissionFunctionParametersAssignmentComponent, {\r\n        height: '400px',\r\n        width: '800px',\r\n        data: {\r\n          target: this.currentFunction\r\n        }\r\n      });\r\n\r\n    }\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWVpbnB1dC1iZWF0ZnJhY3Rpb24vdGltZWlucHV0LWJlYXRmcmFjdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" placeholder=\\\"BPM\\\" [(ngModel)]=\\\"currentTimeInput.bpm\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"currentTimeInput.beatDivisor\\\" placeholder=\\\"Beat parts per cycle\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"currentTimeInput.totalBeats\\\" placeholder=\\\"Total duration (beats)\\\">\\r\\n</mat-form-field>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {CycleTimeBeatFraction} from '../../../blackhole-classes/cycle-time-emitter';\r\n\r\n@Component({\r\n  selector: 'app-timeinput-beatfraction',\r\n  templateUrl: './timeinput-beatfraction.component.html',\r\n  styleUrls: ['./timeinput-beatfraction.component.css']\r\n})\r\nexport class TimeinputBeatfractionComponent implements OnInit {\r\n\r\n  @Input() currentTimeInput: CycleTimeBeatFraction;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWVpbnB1dC1iZWF0cy90aW1laW5wdXQtYmVhdHMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n    <input matInput type=\\\"number\\\" [(ngModel)]=\\\"currentTimeInput.bpm\\\" placeholder=\\\"BPM\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<br/>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n    <input matInput type=\\\"number\\\" [(ngModel)]=\\\"currentTimeInput.beats\\\" placeholder=\\\"Beats\\\">\\r\\n</mat-form-field>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CycleTimeBeats } from '../../../blackhole-classes/cycle-time-emitter';\r\n\r\n@Component({\r\n  selector: 'app-timeinput-beats',\r\n  templateUrl: './timeinput-beats.component.html',\r\n  styleUrls: ['./timeinput-beats.component.css']\r\n})\r\nexport class TimeinputBeatsComponent implements OnInit {\r\n\r\n  @Input() currentTimeInput: CycleTimeBeats;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWVpbnB1dC1kdXJhdGlvbi90aW1laW5wdXQtZHVyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n    <input matInput type=\\\"number\\\" [(ngModel)]=\\\"currentTimeInput.duration\\\" placeholder=\\\"Duration\\\">\\r\\n</mat-form-field>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CycleTimeMsDuration } from '../../../blackhole-classes/cycle-time-emitter';\r\n\r\n@Component({\r\n  selector: 'app-timeinput-duration',\r\n  templateUrl: './timeinput-duration.component.html',\r\n  styleUrls: ['./timeinput-duration.component.css']\r\n})\r\nexport class TimeinputDurationComponent implements OnInit {\r\n\r\n  @Input() currentTimeInput: CycleTimeMsDuration;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWVpbnB1dC1ub3RldGltZXMvdGltZWlucHV0LW5vdGV0aW1lcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div *ngIf=\\\"isFixedDuration\\\">\\r\\n  <mat-form-field class=\\\"fullwidth\\\">\\r\\n    <mat-select [(ngModel)]=\\\"innerTimeType\\\" placeholder=\\\"Cycle Time Type\\\">\\r\\n      <mat-option [value]=\\\"TimeInputType.Span\\\">\\r\\n        Duration (MS)\\r\\n      </mat-option>\\r\\n      <mat-option [value]=\\\"TimeInputType.Beats\\\">\\r\\n        Beats\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <app-timeinput-duration [currentTimeInput]=\\\"innerTimeInput\\\" *ngIf=\\\"innerTimeType == TimeInputType.Span\\\"></app-timeinput-duration>\\r\\n  <app-timeinput-beats [currentTimeInput]=\\\"innerTimeInput\\\" *ngIf=\\\"innerTimeType == TimeInputType.Beats\\\"></app-timeinput-beats>\\r\\n</div>\\r\\n\\r\\n<br>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <textarea matInput [(ngModel)]=\\\"currentTimeInput.notes\\\" placeholder=\\\"Note data (paste from osu editor)\\\"></textarea>\\r\\n</mat-form-field>\\r\\n\\r\\n<!-- <div class=\\\"alert alert-secondary\\\">\\r\\n  {{ currentTimeInput.noteTimes.join(\\\", \\\") }}\\r\\n</div> -->\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport {\r\n  CycleTimeEmitter,\r\n  CycleTimeNotetime,\r\n  CycleTimeNotetimeFixedDuration,\r\n  CycleEmissionType,\r\n  CycleTimeMsDuration,\r\n  CycleTimeBeats\r\n} from '../../../blackhole-classes/cycle-time-emitter';\r\n\r\n@Component({\r\n  selector: 'app-timeinput-notetimes',\r\n  templateUrl: './timeinput-notetimes.component.html',\r\n  styleUrls: ['./timeinput-notetimes.component.css']\r\n})\r\nexport class TimeinputNotetimesComponent implements OnInit {\r\n\r\n  @Input() currentTimeInput: CycleTimeNotetime;\r\n\r\n  @Input() innerTimeInput: CycleTimeEmitter;\r\n\r\n  _innerTimeType: CycleEmissionType;\r\n\r\n  get innerTimeType() {\r\n    return this._innerTimeType;\r\n  }\r\n\r\n  set innerTimeType(type: CycleEmissionType) {\r\n    if (!this.currentTimeInput) return;\r\n\r\n    this._innerTimeType = type;\r\n\r\n    if (type == CycleEmissionType.Span) {\r\n      let timeInput = new CycleTimeMsDuration();\r\n      this.innerTimeInput = new Proxy(timeInput, {\r\n        set: (obj, prop, value) => {\r\n          obj[prop] = value;\r\n\r\n          if (prop == \"duration\") {\r\n            if (this.isFixedDuration) {\r\n              var tiObj = this.currentTimeInput as CycleTimeNotetimeFixedDuration;\r\n              tiObj.duration = obj.getDuration(0);\r\n            }\r\n          }\r\n\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    if (type == CycleEmissionType.Beats) {\r\n      let timeInput = new CycleTimeBeats();\r\n      this.innerTimeInput = new Proxy(timeInput, {\r\n        set: (obj, prop, value) => {\r\n          obj[prop] = value;\r\n\r\n          if (prop == \"bpm\" || prop == \"beats\") {\r\n            if (this.isFixedDuration)\r\n              (this.currentTimeInput as CycleTimeNotetimeFixedDuration)\r\n                .duration = obj.getDuration(0);\r\n          }\r\n\r\n          return true;\r\n        }\r\n      });\r\n    } \r\n  }\r\n\r\n  TimeInputType = CycleEmissionType;\r\n  TimeInputNotetimeFixedDuration = CycleTimeNotetimeFixedDuration;\r\n\r\n  get isFixedDuration() {\r\n    return this.currentTimeInput instanceof CycleTimeNotetimeFixedDuration;\r\n  }\r\n\r\n  constructor() { \r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.innerTimeType = CycleEmissionType.Span;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWVpbnB1dC1zdGFydGVuZC90aW1laW5wdXQtc3RhcnRlbmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput \\r\\n         (change)=\\\"validateTimestamp($event)\\\" \\r\\n         type=\\\"text\\\" \\r\\n         [(ngModel)]=\\\"currentTimeInput.endTime\\\" \\r\\n         placeholder=\\\"End Time\\\">\\r\\n</mat-form-field>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CycleTimeDeltatime } from '../../../blackhole-classes/cycle-time-emitter';\r\nimport { validateTimestamp } from '../../../blackhole-classes/osu-timestamp';\r\n\r\n@Component({\r\n  selector: 'app-timeinput-startend',\r\n  templateUrl: './timeinput-startend.component.html',\r\n  styleUrls: ['./timeinput-startend.component.css']\r\n})\r\nexport class TimeinputStartendComponent implements OnInit {\r\n\r\n  @Input() currentTimeInput: CycleTimeDeltatime;\r\n\r\n\r\n  validateTimestamp(event) {\r\n    const value = event.target.value;\r\n    const validatedValue = validateTimestamp(value);\r\n    if (!isNaN(validatedValue))\r\n      this.currentTimeInput.endTime = validatedValue;\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWVpbnB1dC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <mat-select [(ngModel)]=\\\"newType\\\" placeholder=\\\"Model type...\\\">\\r\\n    <mat-option [value]=\\\"TimeInputType.Span\\\">\\r\\n      Duration (MS)\\r\\n    </mat-option>\\r\\n    <mat-option [value]=\\\"TimeInputType.Delta\\\">\\r\\n      Start-End time pair\\r\\n    </mat-option>\\r\\n    <mat-option [value]=\\\"TimeInputType.Beats\\\">\\r\\n      Beats\\r\\n    </mat-option>\\r\\n    <mat-option [value]=\\\"TimeInputType.BeatDivision\\\">\\r\\n      Beat fractions\\r\\n    </mat-option>\\r\\n    <mat-option [value]=\\\"TimeInputType.NotetimeSpan\\\">\\r\\n      Based on notes (fixed duration)\\r\\n    </mat-option>\\r\\n    <mat-option [value]=\\\"TimeInputType.NoteToNote\\\">\\r\\n      Based on notes (note to note)\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n\\r\\n</mat-form-field>\\r\\n<br/>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"text\\\" (change)=\\\"validateTimestamp($event)\\\" [(ngModel)]=\\\"currentTimeInput.startTime\\\" placeholder=\\\"Start time\\\">\\r\\n</mat-form-field>\\r\\n<br/>\\r\\n\\r\\n<mat-form-field *ngIf=\\\"!currentTimeInput.autocycle\\\" class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" [(ngModel)]=\\\"currentTimeInput.cycleCount\\\" placeholder=\\\"Cycle count\\\">\\r\\n</mat-form-field>\\r\\n<br/>\\r\\n\\r\\n<app-timeinput-duration [currentTimeInput]=\\\"currentTimeInput\\\" *ngIf=\\\"timeType == TimeInputType.Span\\\">\\r\\n</app-timeinput-duration>\\r\\n\\r\\n<app-timeinput-startend [currentTimeInput]=\\\"currentTimeInput\\\" *ngIf=\\\"timeType == TimeInputType.Delta\\\">\\r\\n</app-timeinput-startend>\\r\\n\\r\\n<app-timeinput-beats [currentTimeInput]=\\\"currentTimeInput\\\" *ngIf=\\\"timeType == TimeInputType.Beats\\\">\\r\\n</app-timeinput-beats>\\r\\n\\r\\n<app-timeinput-notetimes [currentTimeInput]=\\\"currentTimeInput\\\" *ngIf=\\\"timeType == TimeInputType.NotetimeSpan || timeType == TimeInputType.NoteToNote\\\">\\r\\n</app-timeinput-notetimes>\\r\\n\\r\\n<app-timeinput-beatfraction [currentTimeInput]=\\\"currentTimeInput\\\" *ngIf=\\\"timeType == TimeInputType.BeatDivision\\\">\\r\\n</app-timeinput-beatfraction>\\r\\n\\r\\n<div *ngIf=\\\"currentTimeInput.isConstantCycleTime\\\" class=\\\"alert alert-secondary\\\">\\r\\n  <b>Used Cycle Time (MS):</b> {{ currentTimeInput.cycleDuration }}\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport {\r\n  CycleTimeEmitter,\r\n  CycleTimeBeats,\r\n  CycleTimeMsDuration,\r\n  CycleTimeDeltatime,\r\n  CycleTimeNotetimeFixedDuration,\r\n  CycleTimeNoteToNote,\r\n  CycleEmissionType, CycleTimeBeatFraction\r\n} from '../../blackhole-classes/cycle-time-emitter';\r\nimport { validateTimestamp } from '../../blackhole-classes/osu-timestamp';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-timeinput',\r\n  templateUrl: './timeinput.component.html',\r\n  styleUrls: ['./timeinput.component.css']\r\n})\r\nexport class TimeinputComponent implements OnInit {\r\n\r\n  @Input() timeType: CycleEmissionType;\r\n\r\n  currentTimeInput: CycleTimeEmitter;\r\n  TimeInputType = CycleEmissionType;\r\n\r\n  timeInputs: any;\r\n\r\n  validateTimestamp(event) {\r\n    const value = event.target.value;\r\n    const validatedValue = validateTimestamp(value);\r\n    if (!isNaN(validatedValue)) {\r\n      this.currentTimeInput.startTime = validatedValue;\r\n    }\r\n  }\r\n\r\n  set newType(type: CycleEmissionType) {\r\n    this.timeType = type;\r\n    this.currentTimeInput = this.timeInputs[this.timeType];\r\n  }\r\n\r\n  get newType() {\r\n    return this.timeType;\r\n  }\r\n\r\n  constructor() {\r\n    this.timeInputs = { // should match CycleEmissionType!!\r\n      0: new CycleTimeMsDuration(),\r\n      1: new CycleTimeDeltatime(),\r\n      2: new CycleTimeBeats(),\r\n      3: new CycleTimeBeatFraction(),\r\n      4: new CycleTimeNotetimeFixedDuration(),\r\n      5: new CycleTimeNoteToNote()\r\n    };\r\n\r\n    this.timeType = CycleEmissionType.Span;\r\n    this.currentTimeInput = this.timeInputs[this.timeType];\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.currentTimeInput = this.timeInputs[this.timeType];\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtaXR0ZXItaW5wdXQvdGltZWlucHV0L3RpbWluZy1wb2ludC10ZW1wbGF0ZS90aW1pbmctcG9pbnQtdGVtcGxhdGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<mat-form-field class=\\\"fullwidth\\\">\\r\\n    <mat-select [(ngModel)]=\\\"currentTimingPoint.sampleSet\\\" placeholder=\\\"Sample Set\\\">\\r\\n        <mat-option [value]=\\\"SampleSet.Auto\\\">\\r\\n          Auto\\r\\n        </mat-option>\\r\\n        <mat-option [value]=\\\"SampleSet.Normal\\\">\\r\\n          Normal\\r\\n        </mat-option>\\r\\n        <mat-option [value]=\\\"SampleSet.Soft\\\">\\r\\n          Soft\\r\\n        </mat-option>\\r\\n        <mat-option [value]=\\\"SampleSet.Drum\\\">\\r\\n          Drum\\r\\n        </mat-option>\\r\\n    </mat-select>\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" placeholder=\\\"Volume\\\" [(ngModel)]=\\\"currentTimingPoint.volume\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" placeholder=\\\"Sampleset Index\\\" [(ngModel)]=\\\"currentTimingPoint.sampleIndex\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<mat-form-field class=\\\"fullwidth\\\">\\r\\n  <input matInput type=\\\"number\\\" placeholder=\\\"Measure Length\\\" [(ngModel)]=\\\"currentTimingPoint.measureLength\\\">\\r\\n</mat-form-field>\\r\\n\\r\\n<br>\\r\\n\\r\\n<mat-checkbox [(ngModel)]=\\\"currentTimingPoint.kiai\\\">\\r\\n  Kiai\\r\\n</mat-checkbox>\\r\\n\"","///<reference path=\"../../../blackhole-classes/osu-timing-point.ts\"/>\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {OsuTimingPoint, SampleSet} from '../../../blackhole-classes/osu-timing-point';\r\n\r\n@Component({\r\n  selector: 'app-timing-point-template',\r\n  templateUrl: './timing-point-template.component.html',\r\n  styleUrls: ['./timing-point-template.component.css']\r\n})\r\nexport class TimingPointTemplateComponent implements OnInit {\r\n\r\n  currentTimingPoint: OsuTimingPoint;\r\n\r\n  SampleSet = SampleSet;\r\n\r\n  constructor() {\r\n    this.currentTimingPoint = new OsuTimingPoint();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmN0aW9uLWVkaXRvci9kZWxldGUtZnVuY3Rpb24tZGlhbG9nL2RlbGV0ZS1mdW5jdGlvbi1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title>Delete function...</h2>\\r\\n<mat-dialog-content>\\r\\n  <div class=\\\"row\\\" *ngFor=\\\"let func of collection\\\">\\r\\n    <div class=\\\"col-md-8\\\">\\r\\n      {{ func.name }}\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <button mat-button (click)=\\\"removeFunc(func)\\\">Delete</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n  Functions will not be removed unless you click <b>Apply!</b>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"commitAndClose()\\\">Apply</button>\\r\\n  <button mat-button mat-dialog-close>Cancel</button>\\r\\n</mat-dialog-actions>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SvFunctionCollection } from '../../blackhole-classes/sv-functions';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-delete-function-dialog',\r\n  templateUrl: './delete-function-dialog.component.html',\r\n  styleUrls: ['./delete-function-dialog.component.css']\r\n})\r\nexport class DeleteFunctionDialogComponent implements OnInit {\r\n  \r\n  collection: any[];\r\n\r\n  constructor(public dialogRef: MatDialogRef<DeleteFunctionDialogComponent>) { \r\n    this.collection = [];\r\n    var funcCollection = SvFunctionCollection.getCollection();\r\n    for (var func in funcCollection) {\r\n      this.collection.push(funcCollection[func]);\r\n    }\r\n  }\r\n\r\n  removeFunc(func)\r\n  {\r\n    for (var i = 0; i < this.collection.length; i++) {\r\n      if (this.collection[i] === func)\r\n        this.collection.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  commitAndClose() {\r\n    var newCollection = {};\r\n    for (var i = 0; i < this.collection.length; i++) {\r\n      newCollection[this.collection[i].name] = this.collection[i];\r\n    }\r\n\r\n    SvFunctionCollection.setCollection(newCollection);\r\n\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".mat-form-field {\\r\\n    display: inline;\\r\\n}\\r\\n\\r\\n.paramarea {\\r\\n    width: 90%;\\r\\n    margin-left: 5%;\\r\\n    margin-right: 5%;\\r\\n}\\r\\n\\r\\ntable {\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\ntd.mat-cell {\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.mat-form-field-wrapper {\\r\\n    width: 90%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZnVuY3Rpb24tZWRpdG9yL2Z1bmN0aW9uLWVkaXRvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0NBQ25COztBQUVEO0lBQ0ksV0FBVztJQUNYLGdCQUFnQjtJQUNoQixpQkFBaUI7Q0FDcEI7O0FBRUQ7SUFDSSxXQUFXO0NBQ2Q7O0FBRUQ7SUFDSSxhQUFhO0NBQ2hCOztBQUVEO0lBQ0ksV0FBVztDQUNkIiwiZmlsZSI6InNyYy9hcHAvZnVuY3Rpb24tZWRpdG9yL2Z1bmN0aW9uLWVkaXRvci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIGRpc3BsYXk6IGlubGluZTtcclxufVxyXG5cclxuLnBhcmFtYXJlYSB7XHJcbiAgICB3aWR0aDogOTAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDUlO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA1JTtcclxufVxyXG5cclxudGFibGUge1xyXG4gICAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxudGQubWF0LWNlbGwge1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGQtd3JhcHBlciB7XHJcbiAgICB3aWR0aDogOTAlO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-9\\\">\\r\\n    <b style=\\\"padding: 2%\\\">Menu</b> <button mat-button [matMenuTriggerFor]=\\\"fileMenu\\\">Collection</button>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-3\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <b>Working on:</b> {{ currentFunction.name }}\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<mat-menu #fileMenu>\\r\\n  <button mat-menu-item (click)=\\\"onNew()\\\">New</button>\\r\\n  <button mat-menu-item (click)=\\\"onLoad()\\\">Load...</button>\\r\\n  <button mat-menu-item (click)=\\\"onSave()\\\">Save to collection...</button>\\r\\n  <button mat-menu-item (click)=\\\"onDelete()\\\">Delete from collection...</button>\\r\\n  <button mat-menu-item>Import collection...</button>\\r\\n  <button mat-menu-item (click)=\\\"onExport()\\\">Export collection</button>\\r\\n</mat-menu>\\r\\n\\r\\n<mat-tab-group>\\r\\n  <mat-tab label=\\\"Code\\\">\\r\\n    <div ace-editor [(text)]=\\\"currentFunction.body\\\" [mode]=\\\"'javascript'\\\" [theme]=\\\"'eclipse'\\\" [options]=\\\"editorOptions\\\" style=\\\"min-height: 540px\\\"\\r\\n      #editor>\\r\\n    </div>\\r\\n\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Parameters\\\">\\r\\n    <br>\\r\\n    <div class=\\\"paramarea\\\">\\r\\n      <mat-card>\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Function Name\\\" [(ngModel)]=\\\"currentFunction.name\\\">\\r\\n        </mat-form-field>\\r\\n        <br>\\r\\n        <mat-form-field>\\r\\n          <textarea matInput placeholder=\\\"Function description\\\" [(ngModel)]=\\\"currentFunction.tooltip\\\">\\r\\n        </textarea>\\r\\n        </mat-form-field>\\r\\n        <mat-checkbox [(ngModel)]=\\\"currentFunction.isBpm\\\">Is BPM function</mat-checkbox>\\r\\n      </mat-card>\\r\\n    </div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n    <div class=\\\"paramarea\\\">\\r\\n      <h2> Function Parameters </h2>\\r\\n      <br>\\r\\n      <button mat-raised-button (click)=\\\"addParam();\\\">Add...</button>\\r\\n      <br>\\r\\n\\r\\n      <table mat-table [dataSource]=\\\"currentFunction.parameters\\\" #paramTable>\\r\\n        <ng-container matColumnDef=\\\"paramName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Parameter Name </th>\\r\\n          <td mat-cell *matCellDef=\\\"let el\\\">\\r\\n            <mat-form-field class=\\\"tbIn\\\">\\r\\n              <input matInput class=\\\"tbIn\\\" [(ngModel)]=\\\"el.name\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"description\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Description </th>\\r\\n          <td mat-cell *matCellDef=\\\"let el\\\">\\r\\n            <mat-form-field class=\\\"tbIn\\\">\\r\\n              <input matInput class=\\\"tbIn\\\" [(ngModel)]=\\\"el.description\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"defaultValue\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Default Value </th>\\r\\n          <td mat-cell *matCellDef=\\\"let el\\\">\\r\\n            <mat-form-field class=\\\"tbIn\\\">\\r\\n              <input matInput class=\\\"tbIn\\\" [(ngModel)]=\\\"el.defaultValue\\\">\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"actions\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n          <td mat-cell *matCellDef=\\\"let el\\\">\\r\\n            <button mat-button (click)=\\\"deleteParam(el)\\\">\\r\\n              Remove\\r\\n            </button>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      <p class=\\\"alert alert-primary\\\" *ngIf=\\\"currentFunction.parameters.length === 0\\\">\\r\\n        No parameters to display.\\r\\n      </p>\\r\\n\\r\\n      <br>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Reference\\\">\\r\\n    <div class=\\\"padder col\\\">\\r\\n      <h2>Reference</h2>\\r\\n      <ul>\\r\\n        <li>\\r\\n          Returning a\\r\\n          <code>NaN</code> value will skip over the current divisor.\\r\\n        </li>\\r\\n        <li>\\r\\n          The\\r\\n          <code>params.builtin</code> value contains some useful definitions, such as\\r\\n          <code>currentDivisor</code>,\\r\\n          <code>divisorCount</code>,\\r\\n          <code>divisorBpm</code> (can be null),\\r\\n          <code>cycleBpm</code> (can be null),\\r\\n          <code>currentCycle</code>,\\r\\n          <code>cycleCount</code>,\\r\\n          <code>divisionSpan</code> in MS, and\\r\\n          <code>cycleSpan</code> in MS. Overwriting them changes the value for repeated calls within the same cycle.\\r\\n        </li>\\r\\n        <li>\\r\\n          The SV function is called once every divisor of every cycle.\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\"","import {Component, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {SvFunction, SvFunctionCollection, SvFunctionType, SvParameter} from '../blackhole-classes/sv-functions';\r\nimport {MatDialog} from '@angular/material';\r\nimport {SelectFunctionDialogComponent} from './select-function-dialog/select-function-dialog.component';\r\nimport {DeleteFunctionDialogComponent} from './delete-function-dialog/delete-function-dialog.component';\r\nimport { saveAs } from 'file-saver/FileSaver.js';\r\n\r\n@Component({\r\n  selector: 'app-function-editor',\r\n  templateUrl: './function-editor.component.html',\r\n  styleUrls: ['./function-editor.component.css']\r\n})\r\n\r\nexport class FunctionEditorComponent implements OnInit {\r\n\r\n  @ViewChild('editor') editor;\r\n\r\n  @ViewChild('paramTable') paramTable;\r\n\r\n  @Input() collection: SvFunctionCollection;\r\n\r\n  currentFunction: SvFunction;\r\n\r\n  displayedColumns = [\r\n    'paramName',\r\n    'description',\r\n    'defaultValue',\r\n    'actions'\r\n  ];\r\n\r\n\r\n  editorOptions = {\r\n    enableLiveAutocompletion: true\r\n  };\r\n\r\n  constructor(public dialog: MatDialog) {\r\n    this.currentFunction = new SvFunction(SvFunctionType.SV);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onNew() {\r\n    this.currentFunction = new SvFunction(SvFunctionType.SV);\r\n  }\r\n\r\n  onLoad() {\r\n    const opendialog = this.dialog.open(SelectFunctionDialogComponent);\r\n\r\n    opendialog.afterClosed().subscribe((value) => {\r\n      if (value) {\r\n        this.currentFunction = value;\r\n      }\r\n    });\r\n  }\r\n\r\n  onSave() {\r\n    if (this.currentFunction.name === '' ||\r\n        this.currentFunction.name === SvFunction.defaultName) {\r\n      const ret = prompt('The function is unnamed. What will you name it?');\r\n      if (ret != null) {\r\n        this.currentFunction.name = ret;\r\n      }\r\n    }\r\n\r\n    const msg = `The function named \"${this.currentFunction.name}\" already exists. Overwrite?`;\r\n    const funcobj = SvFunctionCollection.getCollection();\r\n    if (!funcobj[this.currentFunction.name] ||\r\n      (funcobj[this.currentFunction.name] && confirm(msg))) {\r\n\r\n      funcobj[this.currentFunction.name] = this.currentFunction;\r\n\r\n      SvFunctionCollection.setCollection(funcobj);\r\n\r\n      alert(`Function ${this.currentFunction.name} saved correctly.`);\r\n    }\r\n  }\r\n\r\n  onDelete() {\r\n    const deletedialog = this.dialog.open(DeleteFunctionDialogComponent);\r\n  }\r\n\r\n  addParam() {\r\n    const newParam = new SvParameter();\r\n    newParam.name = 'untitled_' + (this.currentFunction.parameters.length + 1);\r\n    this.currentFunction.parameters.push(newParam);\r\n    this.paramTable.renderRows();\r\n  }\r\n\r\n  deleteParam(toRemove) {\r\n    for (let i = 0; i < this.currentFunction.parameters.length; i++) {\r\n      const param = this.currentFunction.parameters[i];\r\n      if (param === toRemove) {\r\n        this.currentFunction.parameters.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    this.paramTable.renderRows();\r\n  }\r\n\r\n  onExport() {\r\n    const collStr = JSON.stringify(SvFunctionCollection.getCollection());\r\n    const collBlob = new Blob([collStr]);\r\n    saveAs(collBlob, 'export.json');\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Z1bmN0aW9uLWVkaXRvci9zZWxlY3QtZnVuY3Rpb24tZGlhbG9nL3NlbGVjdC1mdW5jdGlvbi1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title>Open...</h2>\\r\\n<mat-dialog-content>\\r\\n  <mat-form-field>\\r\\n    <mat-select [(ngModel)]=\\\"selection\\\">\\r\\n      <mat-option *ngFor=\\\"let f of collection\\\" [value]=\\\"f\\\">\\r\\n        {{ f.name }}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </mat-form-field>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n  <button mat-button [mat-dialog-close]=\\\"selection\\\">Select</button>\\r\\n  <button mat-button mat-dialog-close>Cancel</button>\\r\\n</mat-dialog-actions>\"","import { Component, OnInit } from '@angular/core';\r\nimport { SvFunctionCollection } from '../../blackhole-classes/sv-functions';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-select-function-dialog',\r\n  templateUrl: './select-function-dialog.component.html',\r\n  styleUrls: ['./select-function-dialog.component.css']\r\n})\r\nexport class SelectFunctionDialogComponent implements OnInit {\r\n\r\n  collection: any[];\r\n  selection: any;\r\n\r\n  constructor(public dialogRef: MatDialogRef<SelectFunctionDialogComponent>) { \r\n    this.collection = [];\r\n    var funcCollection = SvFunctionCollection.getCollection();\r\n    for (var func in funcCollection) {\r\n      this.collection.push(funcCollection[func]);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}